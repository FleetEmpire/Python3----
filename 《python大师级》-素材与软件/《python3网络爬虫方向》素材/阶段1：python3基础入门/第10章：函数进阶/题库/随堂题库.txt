1.判断以下代码的运行结果是（    ）

a=[1,2,3,4]

def func():

　　a=[5,6,7,8]

func()
print(a)


A [1,2,3,4]   b  [5,6,7,8]


2.判断以下代码的运行结果是（   ）

a=[1,2,3,4]

def func():
    a.extend([5,6,7,8])

func()
print(a)

A [1,2,3,4]   b  [5,6,7,8]  c [1, 2, 3, 4, 5, 6, 7, 8]


3.编写一个函数嵌套使用的案例


4.递归求sum = n+(n-1)+(n-2)+(n-3)...1的和
   递归求n!=1×2×3×...×(n-1)n阶乘


5.将以下if―else条件判断更改为三元运算，并将其封装为一个匿名函数

a = 12
b = 23
if a>b:
    print(a)
else:
    print(b)


6.对闭包函数进行总结，尤其是闭包函数和嵌套函数和返回函数之间有哪些区别











参考答案：
---------------------------------------------------------------------------------------------------------------------------------------------
1.判断以下代码的运行结果是（    ）

a=[1,2,3,4]

def func():

　　a=[5,6,7,8]

func()
print(a)


A [1,2,3,4]   b  [5,6,7,8]

答案是：A 局部变量如果想要修改全局变量需要加global关键字

2.判断以下代码的运行结果是（   ）

a=[1,2,3,4]

def func():
    a.extend([5,6,7,8])

func()
print(a)

A [1,2,3,4]   b  [5,6,7,8]  c [1, 2, 3, 4, 5, 6, 7, 8]
答案是c  列表是不可变数据类型。属于引用传递
引用传递，在函数里进行值得修改,源对象也会被修改。

3.编写一个函数嵌套使用的案例
自主探究题目，不提供答案


4.递归求sum = n+(n-1)+(n-2)+(n-3)...1的和
   递归求n!=1×2×3×...×(n-1)n阶乘
ppt和源码中有对应的答案参考，在这里不再进行提供

5.将以下if―else条件判断更改为三元运算，并将其封装为一个匿名函数

a = 12
b = 23
if a>b:
    print(a)
else:
    print(b)

答案如下：

a,b = 12,23 #一次性多添加变量
print(a) if a>b else print(b)

封装为匿名函数
func3 = lambda a,b:print(a) if a > b else print(b)
f = func3(12,34)
print(f)

6.对闭包函数进行总结，尤其是闭包函数和嵌套函数和返回函数之间有哪些区别
自主探究题目，不提供答案


















































































